# Complete deployment of MCP Weather Sample on Kubernetes
# Apply all objects with a single command: kubectl apply -f k8s-all-in-one.yaml

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mcp-weather-config
  labels:
    app: mcp-weather-app
data:
  NODE_ENV: "production"
  PORT: "8080"
  LOG_LEVEL: "info"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-weather-app
  labels:
    app: mcp-weather-app
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mcp-weather-app
  template:
    metadata:
      labels:
        app: mcp-weather-app
        version: v1
    spec:
      containers:
      - name: mcp-weather-app
        image: mcp-weather-sample:latest
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: mcp-weather-config
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: mcp-weather-service
  labels:
    app: mcp-weather-app
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: mcp-weather-app

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mcp-weather-ingress
  labels:
    app: mcp-weather-app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Mcp-Session-Id"
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: mcp-weather.local  # Replace with your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mcp-weather-service
            port:
              number: 80